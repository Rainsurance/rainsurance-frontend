async function run(){const r=Number(args[0]),e=Number(args[1]),s=Number(args[4]),n=Number(args[5]);var t=Number(args[2])/s,o=Number(args[3])/s;if(!secrets.apiKey)throw Error();console.log(t,o,r,e,s,n);const a=new Date(1e3*r).toISOString().slice(0,10),c=new Date(1e3*e).toISOString().slice(0,10),i=await historybasic(t,o,a,c,secrets.apiKey);if(i.error)throw Error(i.error_message);{const r=Math.round(i.precAvg*n),e=i.precDays;return Buffer.concat([Functions.encodeUint256(r),Functions.encodeUint256(e)])}}
async function historybasic(e,r,t,a,s){const o="https://my.meteoblue.com/packages/historybasic-1h?lat="+e+"&lon="+r+"&startdate="+t+"&enddate="+a+"&format=json&apikey="+s,c=await Functions.makeHttpRequest({url:o});if(c.error_message)return{precAvg:0,precDays:0,error:!0,error_message:data.error_message};{const e=24,r=c.data.history_1h.precipitation,t=r.length/e,a=r.reduce(((e,r)=>e+r),0)/t,s=[];for(let t=0;t<r.length;t+=e){const a=r.slice(t,t+e);s.push(a)}let o=0;return s.forEach((e=>{e.reduce(((e,r)=>e+r),0)>0&&o++})),{precAvg:a,precDays:o,error:!1}}}
return run();